{"version":3,"sources":["components/ExpenseFilter/ExpenseFilter.js","components/UI/Card.js","components/chart/ChartBar.js","components/chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/ExpenseDate.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpensesFilter","props","className","value","selected","onChange","e","onChangeFilter","Card","classes","children","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","values","dataPoints","map","data","totalMax","max","dataPoint","ExpensesChart","expenses","expense","date","getMonth","amount","ExpenseDate","month","toLocaleString","year","getFullYear","day","ExpenseItem","title","ExpensesList","filteredExpenses","length","id","ExpenseItemList","useState","filter","setFilter","exp","toString","target","ExpenseForm","setTitle","setAmount","Date","setDate","clearData","onSubmit","preventDefault","expenseData","onSaveExpenseData","onCancel","htmlFor","type","min","step","onClick","NewExpense","showForm","setShowForm","showFormHandler","content","enteredExpenseData","random","onAddExpense","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.f16c6fd6.chunk.js","sourcesContent":["import './ExpenseFilter.css';\n\nconst ExpensesFilter = (props) => {\n  const onChangeSelectHandler = (e) => {\n    props.onChangeFilter(e);\n  };\n\n  return (\n    <div className='expenses-filter'>\n      <div className='expenses-filter__control'>\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={onChangeSelectHandler}>\n          <option value='2022'>2022</option>\n          <option value='2021'>2021</option>\n          <option value='2020'>2020</option>\n          <option value='2019'>2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./Card.css\";\nexport default function Card(props) {\n  const classes = \"card \" + props.className;\n\n  return <div className={classes}>{props.children}</div>;\n}\n","import './ChartBar.css';\n\nconst ChartBar = (props) => {\n  let barFillHeight = '0%';\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + '%';\n  }\n\n  return (\n    <div className='chart-bar'>\n      <div className='chart-bar__inner'>\n        <div\n          className='chart-bar__fill'\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className='chart-bar__label'>{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import './Chart.css';\n\nimport ChartBar from './ChartBar';\n\nconst Chart = (props) => {\n  const values = props.dataPoints.map((data) => data.value);\n\n  const totalMax = Math.max(...values);\n\n  return (\n    <div className='chart'>\n      {props.dataPoints.map((dataPoint) => (\n        <ChartBar\n          key={dataPoint.label}\n          value={dataPoint.value}\n          maxValue={totalMax}\n          label={dataPoint.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import Chart from '../chart/Chart';\n\nconst ExpensesChart = (props) => {\n  const dataPoints = [\n    { label: 'Jan', value: 0 },\n    { label: 'Feb', value: 0 },\n    { label: 'Mar', value: 0 },\n    { label: 'Apr', value: 0 },\n    { label: 'May', value: 0 },\n    { label: 'Jun', value: 0 },\n    { label: 'Jul', value: 0 },\n    { label: 'Aug', value: 0 },\n    { label: 'Sep', value: 0 },\n    { label: 'Oct', value: 0 },\n    { label: 'Nov', value: 0 },\n    { label: 'Dec', value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const month = expense.date.getMonth(); //january=0\n    dataPoints[month].value += expense.amount;\n  }\n\n  return <Chart dataPoints={dataPoints} />;\n};\n\nexport default ExpensesChart;\n","import \"./ExpenseDate.css\";\n\nexport default function ExpenseDate(props) {\n  const month = props.date.toLocaleString(\"en-US\", { month: \"long\" });\n  const year = props.date.getFullYear();\n  const day = props.date.toLocaleString(\"en-US\", { day: \"2-digit\" });\n\n  return (\n    <div className=\"expense-date\">\n      <div className=\"expense-date__month\">{month}</div>\n      <div className=\"expense-date__year\">{year}</div>\n      <div className=\"expense-date__day\">{day}</div>\n    </div>\n  );\n}\n","import Card from '../UI/Card';\nimport ExpenseDate from './ExpenseDate';\nimport './ExpenseItem.css';\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className='expense-item'>\n        <ExpenseDate date={props.date} />\n        <div className='expense-item__description'>\n          <h2>{props.title}</h2>\n          <div className='expense-item__price'>${props.amount}</div>\n        </div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import './ExpensesList.css';\n\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = (props) => {\n  if (props.filteredExpenses.length === 0) {\n    return <h2 className='expenses-list__fallback'>Found no expenses</h2>;\n  }\n\n  return (\n    <ul className='expenses-list'>\n      {props.filteredExpenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n    </ul>\n  );\n};\n\nexport default ExpensesList;\n","import { useState } from 'react';\nimport ExpensesFilter from '../ExpenseFilter/ExpenseFilter';\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesChart from './ExpensesChart';\nimport ExpensesList from './ExpensesList';\n\nexport default function ExpenseItemList(props) {\n  const [filter, setFilter] = useState('2020');\n\n  const changeFilterHandler = (e) => {\n    setFilter(e.target.value);\n  };\n\n  const filteredExpenses = props.expenses.filter(\n    (exp) => exp.date.getFullYear().toString() === filter\n  );\n\n  return (\n    <Card className='expenses'>\n      <ExpensesFilter selected={filter} onChangeFilter={changeFilterHandler} />\n      <ExpensesChart expenses={filteredExpenses} />\n      <ExpensesList filteredExpenses={filteredExpenses} />\n    </Card>\n  );\n}\n","import { useState } from 'react';\nimport './ExpenseForm.css';\n\nconst ExpenseForm = (props) => {\n  const [title, setTitle] = useState('');\n  const [amount, setAmount] = useState('');\n  const [date, setDate] = useState(new Date());\n\n  const titleChangeHandler = (e) => setTitle(e.target.value);\n  const amountChangeHandler = (e) => setAmount(e.target.value);\n  const dateChangeHandler = (e) => setDate(e.target.value);\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n\n    const expenseData = {\n      title: title,\n      amount: +amount,\n      date: new Date(date),\n    };\n\n    props.onSaveExpenseData(expenseData);\n    props.onCancel();\n\n    clearData();\n  };\n\n  const clearData = () => {\n    setAmount('');\n    setDate('');\n    setTitle('');\n  };\n\n  return (\n    <form onSubmit={submitHandler}>\n      <div className='new-expense__controls'>\n        <div className='new-expense__control'>\n          <label htmlFor='title'>Title</label>\n          <input type='text' onChange={titleChangeHandler} value={title} />\n        </div>\n\n        <div className='new-expense__control'>\n          <label htmlFor='amount'>Amount</label>\n          <input\n            type='number'\n            min='0.01'\n            step='0.01'\n            onChange={amountChangeHandler}\n            value={amount}\n          />\n        </div>\n\n        <div className='new-expense__control'>\n          <label htmlFor='title'>Date</label>\n          <input\n            type='date'\n            min='2019-01-01'\n            max='2022-12-31'\n            onChange={dateChangeHandler}\n            value={date}\n          />\n        </div>\n\n        <div className='new-expense__actions'>\n          <button type='button' onClick={props.onCancel}>\n            Cancel\n          </button>\n        </div>\n        <div className='new-expense__actions'>\n          <button type='submit'>Add Expense</button>\n        </div>\n      </div>\n    </form>\n  );\n};\n\nexport default ExpenseForm;\n","import { useState } from 'react';\nimport ExpenseForm from './ExpenseForm';\nimport './NewExpense.css';\nconst NewExpense = (props) => {\n  const [showForm, setShowForm] = useState(false);\n\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      id: Math.random().toString(),\n      ...enteredExpenseData,\n    };\n\n    props.onAddExpense(expenseData);\n  };\n\n  const showFormHandler = () => setShowForm(!showForm);\n\n  let content = '';\n\n  if (showForm) {\n    content = (\n      <ExpenseForm\n        onSaveExpenseData={saveExpenseDataHandler}\n        onCancel={showFormHandler}\n      />\n    );\n  } else {\n    content = (\n      <button type='button' onClick={showFormHandler}>\n        Add New Expense\n      </button>\n    );\n  }\n\n  return <div className='new-expense'>{content}</div>;\n};\n\nexport default NewExpense;\n","import { useState } from 'react';\nimport Expenses from './components/Expenses/Expenses';\nimport NewExpense from './components/NewExpense/NewExpense';\n\nconst DUMMY_EXPENSES = [\n  {\n    id: 'e1',\n    title: 'Toilet Paper',\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: 'e2', title: 'New TV', amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: 'e3',\n    title: 'Car Insurance',\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: 'e4',\n    title: 'New Desk (Wooden)',\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\nfunction App() {\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  const addExpenseHandler = (expense) =>\n    setExpenses((prevExpenses) => {\n      return [expense, ...prevExpenses];\n    });\n\n  return (\n    <div>\n      <NewExpense onAddExpense={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}